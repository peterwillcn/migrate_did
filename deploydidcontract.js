"use strict";

const Web3 = require("web3");
const web3 = new Web3("http://127.0.0.1:21636");
const ks = require("./ks");

// const acc = web3.eth.accounts.decrypt(ks.kstore, ks.kpass);

const acc = web3.eth.accounts.decrypt({"address":"53781e106a2e3378083bdcede1874e5c2a7225f8","crypto":{"cipher":"aes-128-ctr","ciphertext":"bc53c1fcd6e31a6392ddc1777157ae961e636c202ed60fb5dda77244c5c4b6ff","cipherparams":{"iv":"c5d1a7d86d0685aa4542d58c27ae7eb4"},"kdf":"scrypt","kdfparams":{"dklen":32,"n":262144,"p":1,"r":8,"salt":"409429444dabb5664ba1314c93f0e1d7a1e994a307e7b43d3f6cc95850fbfa9f"},"mac":"4c37821c90d35118182c2d4a51356186482662bb945f0fcd33d3836749fe59c0"},"id":"39e7770e-4bc6-42f3-aa6a-c0ae7756b607","version":3}, "123");  

console.log("===>", acc.address);
// const ctrt = require("./ctrt");

const contract=new web3.eth.Contract([
	{
		"inputs": [],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "data",
				"type": "string"
			}
		],
		"name": "publishDidTransaction",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
]);


const cdata="608060405234801561001057600080fd5b506102c1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806303c6d24014610030575b600080fd5b61004a60048036038101906100459190610167565b61004c565b005b6000601690506000602090506000602090506100666100dd565b6000805a90506000879050858151019250848484838a86fa5060018460006001811061008e57fe5b6020020151146100d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ca906101e8565b60405180910390fd5b5050505050505050565b6040518060200160405280600190602082028036833780820191505090505090565b600061011261010d84610239565b610208565b90508281526020810184848401111561012a57600080fd5b61013584828561027a565b509392505050565b600082601f83011261014e57600080fd5b813561015e8482602086016100ff565b91505092915050565b60006020828403121561017957600080fd5b600082013567ffffffffffffffff81111561019357600080fd5b61019f8482850161013d565b91505092915050565b60006101b5600883610269565b91507f6469646572726f720000000000000000000000000000000000000000000000006000830152602082019050919050565b60006020820190508181036000830152610201816101a8565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171561022f5761022e610289565b5b8060405250919050565b600067ffffffffffffffff82111561025457610253610289565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b82818337600083830152505050565bfefea26469706673582212205a4a0ba9d0d11c4fac34eb2ecda96b73cc3abe2548ddbe12badfb8f65ff25b0b64736f6c63430007060033"


const data = contract.deploy({data: cdata}).encodeABI();
const tx = {data: data, gas: "2000000", gasPrice: "2000000000"};

acc.signTransaction(tx).then((stx) => {
	console.log("sign over", stx.rawTransaction)
    web3.eth.sendSignedTransaction(stx.rawTransaction).on("transactionHash", console.log)
        .then(console.log)
        .catch(console.log);
}).catch(console.log);
